<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
    <DockerDefaultTargetOS>Windows</DockerDefaultTargetOS>
    <UserSecretsId>1029f6e5-2952-4dc5-82c7-6fc4dff19099</UserSecretsId>
    <AssemblyName>PictureEngineer.Core</AssemblyName>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <NoWarn>$(NoWarn);1591</NoWarn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <WarningLevel>5</WarningLevel>
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="FluentValidation.AspNetCore" Version="9.5.4" />
    <PackageReference Include="Microsoft.AspNetCore" Version="2.1.7" />
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Authentication" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Identity" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.TagHelpers" Version="2.1.2" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="2.1.1" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.4.10" />
    <PackageReference Include="Microsoft.VisualStudio.Web.BrowserLink" Version="2.0.2" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.10" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="wwwroot\assets\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="wwwroot\assets\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Remove="wwwroot\assets\**" />
    <None Remove="wwwroot\assets\**" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\PictureEngineer.Data\PictureEngineer.Data.csproj" />
    <ProjectReference Include="..\PictureEngineer.OCR\PictureEngineer.OCR.csproj" />
    <ProjectReference Include="..\PictureEngineer.PDFConversion\PictureEngineer.PDFConversion.csproj" />
    <ProjectReference Include="..\PictureEngineer.PDFProcessing\PictureEngineer.PDFProcessing.csproj" />
    <ProjectReference Include="..\PictureEngineer.Reponsitories\PictureEngineer.Reponsitories.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="detector\yolov3.cfg">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="detector\yolov3.weights">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="traindata\eng.traineddata">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="traindata\vie.traineddata">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\image\" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

   <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>
</Project>
