
@model IEnumerable<PictureEngineer.Data.Entities.AspNetUser>
@{
    ViewData["Title"] = "Picture Engineer - Thành viên";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="app-title">
    <div>
        <h1><i class="fa fa-user"></i> Thành viên</h1>
        <p>Thực hiện quản lý tài khoản</p>
    </div>
    <ul class="app-breadcrumb breadcrumb side">
        <li class="breadcrumb-item"><i class="fa fa-user fa-lg"></i>&nbsp;Thành viên</li>
    </ul>
</div>
<!-- Danh sách tài khoản -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header text-right">
                <a data-toggle="modal" data-target="#modal-add" id="btn-toggle" class="btn btn-info btn-sm text-white"><i class="fa fa-plus"></i>Tạo tài khoản</a>
            </div>
            <div class="card-body">
                <table id="myTable" class="table table-hover table-bordered">
                    <thead>
                        <tr>
                            <th width="5%">Id</th>
                            <th width="10%">Avatar</th>
                            <th width="10%">Tài khoản</th>
                            <th width="10%">Tên</th>
                            <th width="5%">Email</th>
                            <th width="10%">Số điện thoại</th>
                            <th width="10%">Xác nhận email</th>
                            <th width="15%">Thời gian mở khóa</th>
                            <th width="10%">Trạng thái</th>
                            <th width="15%">Xử lý</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<!-- Lock -->
<div class="modal fade" id="lock" tabindex="-1" role="dialog" aria-labelledby="lock" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header text-center">
                <h4 class="modal-title" id="exampleModalLongTitle"><i class="fa fa-lock"></i>&nbsp;Khóa tài khoản</h4>
            </div>
            <div class="modal-body">
                <span class="hidden userId" style="display: none"></span>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Thoát</button>
                <button onclick="LockUser(1);" type="button" class="btn btn-primary"><i class="fa fa-lock"></i>&nbsp;Khóa 1 giờ</button>
                <button onclick="LockUser(2);" type="button" class="btn btn-primary"><i class="fa fa-lock"></i>&nbsp;Khóa 1 ngày</button>
                <button onclick="LockUser(0);" type="button" class="btn btn-danger"><i class="fa fa-warning"></i>&nbsp;Dừng tài khoản</button>
            </div>
        </div>
    </div>
</div>
@{ await Html.RenderPartialAsync("Register.cshtml"); }
@section scripts{
    <script type="text/javascript">

        $(".index").removeClass("active");
        $(".user").addClass("active");


        async function JTables() {
            
            await $("#myTable").DataTable({
                paging: true,
                searching: true,
                pageLength: 10,
                processing: true,
                serverSide: false,
                "bSort": false,
                "responsive": true,
                ajax: {
                    url: "/admin/accounts/all",
                    method: "GET"
                },
                columns: [
                    {
                        data: "Id"
                    },
                    {
                        data: "Picture", name: "picture", 'className': 'text-center', orderable: false,
                        render: function (data) {
                            return '<img src=' + data + ' `width="40"` height="40" style="border-radius: 50%"/>';
                        }
                    },
                    { data: "UserName", name: "user-name", 'className': 'text-center', orderable: false },
                    { data: "FullName", name: "fullname", 'className': 'text-center', orderable: false },
                    { data: "Email", name: "email", 'className': 'text-center', orderable: false },
                    { data: "PhoneNumber", name: "phone-number", 'className': 'text-center', orderable: false },
                    {
                        data: "EmailConfirmed",
                        render: function (data) {
                            if (data === true) {
                                return "<button class='btn btn-outline-info btn-sm'>Hoạt động</button>";
                            }
                            else {
                                return "<button class='btn btn-outline-danger btn-sm'>Cần xác nhận</button>";
                            }
                        }
                    },
                    {
                        data: "LockoutEnd",
                        render: function (data) {
                            var date = new Date(data);

                            if (date < Date.now()) return "";
                            return "Time:&nbsp;<strong>" + date.getHours() + "h " + date.getMinutes() + "p</strong><br/>" + "Date:&nbsp;<strong>" + date.getDate() + " - " + (date.getMonth() + 1) + " - " + date.getFullYear() + "</strong>";
                        }
                    },
                    {
                        data: "LockoutEnabled",
                        render: function (data, type, row) {
                            
                            var date = new Date(row.LockoutEnd);
                            if (date.getTime() > Date.now()) return "<button class='btn btn-outline-danger btn-sm'>Khóa</button>";

                            if (data) {
                                return "<button class='btn btn-outline-info btn-sm'>Hoạt động</button>";
                            }
                            else {
                                return "<button class='btn btn-outline-danger btn-sm'>Khóa</button>";
                            }
                        }
                    },
                    {
                        data: null,
                        className: "can-giua",
                        render: function (data, type, row) {

                            
                            var button =
                                '<td><a href="javascript:void(0);" class="btn btn-info btn-sm" onclick="SetUserId(this);" data-id="' + row.Id + '" data-toggle="modal" data-target="#lock" title="Khóa"><i class="fa fa-lock"></i>Khóa</a>&nbsp;';

                            var date = new Date(row.LockoutEnd);

                            if (date.getTime() > Date.now() || row.LockoutEnabled == false) {
                                button =
                                    `<td><a href="javascript:void(0);" class="btn btn-info btn-sm" onclick="UnLockUser(this)" data-id="` + row
                                        .Id  + `"  title="Mở khóa"><i class="fa fa-unlock"></i>Mở khóa</a>&nbsp;`
                            }

                            button +=
                                '<a href="javascript:void(0);" class="btn btn-danger btn-sm" onclick="DeleteUser(this)" data-id="' + row.Id + '" title="Xóa"><i class="fa fa-trash"></i>Xóa</a></td>';
                            return button;
                        },
                    }
                ],
                "columnDefs": [{
                    "searchable": false,
                    "visible": false,
                    "checkboxes": {
                        'selectRow': true
                    },
                    targets: [0]
                }],
                "select": {
                    'style': 'multi'
                },
            });
        };

        JTables();

        //Reload tables  
        async function reloadTables() {
            await $("#myTable").DataTable().ajax.reload();
        };

        //delete user
        async function DeleteUser(event) {
            swal({
                title: "Bạn có muốn xóa tài khoản?",
                type: "warning",
                showCancelButton: true,
                confirmButtonText: "Có, xóa nó!",
                cancelButtonText: "Không, không cần đâu!",
                closeOnConfirm: false,
                closeOnCancel: true
            }, (isConfirm) => {
                if (isConfirm) {
                    halderDelete();
                }
            });

            const halderDelete = async () => {
                var userId = $(event).attr('data-id');

                $.ajax({
                    type: "DELETE",
                    url: "/admin/accounts?userId=" + userId,
                    processData: false,
                    contentType: false,
                    success: function (msg) {
                        toastr["success"](msg)
                        swal.close();
                        reloadTables();
                    },
                    error: function (error) {
                        swal("Oh no!", error.responseText, "error");
                    }
                })
            }
        };

        function SetUserId(event) {
            var userId = $(event).attr('data-id');
            $(".userId").text(userId);
        };

        //Lock user
        async function LockUser(types) {
            var userId = $(".userId").text();

            let formData = new FormData();
            formData.append("userId", userId);
            formData.append("type", types);

            const response = await fetch("/admin/LockUser", {
                method: 'POST',
                body: formData
            });

            const msg = await response.json();

            if (msg.success) {
                toastr["success"](msg.message);
                swal.close();
                reloadTables();
            }
            else {
                swal("Oh no!", msg.message, "error");
            }

            $("#lock").modal("toggle");
        };

        async function UnLockUser(event) {

            var userId = $(event).attr('data-id');

            const response = await fetch("/admin/UnlockUser/" + userId);
            const msg = await response.json();

            if (msg.success) {
                toastr["success"](msg.message);
                swal.close();
                reloadTables();
            }
            else {
                swal("Oh no!", msg.message, "error");
            }
        }

        //create account
        var formAccount = $("#form-account").validate({
            rules: {
                ...rules
            },
            messages: { ...messages },
            ...options,
            submitHandler: function (form) {
                var data = $("#form-account").find(".form-control");
                var formData = new FormData();

                data.map(item => {
                    var valueItem = $(data[item]).val();
                    const key = $(data[item]).attr("data-key");

                    if (key === 'Key') {
                        valueItem = valueItem.toLowerCase();
                    }

                    formData.append(key, valueItem);
                })

                $.ajax({
                    type: "POST",
                    url: "/admin/accounts",
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {
                        $("#btn-add").html("Loading...");
                        $("#btn-add").addClass("disabled");
                    },
                    success: function (msg) {
                        $.notify({
                            message: msg,
                            icon: "fa fa-check"
                        }, {
                            type: 'info'
                        });
                        $("#modal-add").modal("toggle");
                        $("#btn-add").html('<i class="fa fa-sign-in fa-lg fa-fw"></i>Tạo tài khoản');
                        reloadTables();
                    },
                    error: function (errors) {
                        toastr["error"](errors.responseText);
                        $("#btn-add").html('<i class="fa fa-sign-in fa-lg fa-fw"></i>Tạo tài khoản');
                        $("#btn-add").removeClass("disabled");
                    }
                })
            }
        });

        $("#btn-toggle").click(function () {
            formAccount.resetForm();
            $("#form-account").find("input[class='form-control']").val("");
        })
    </script>
}